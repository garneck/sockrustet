name: Publish Scratch Docker image

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]

env:
  REGISTRY: docker.io
  IMAGE_NAME: garneck/sockrustet
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          # Create a builder that persists cache between runs
          driver-opts: |
            network=host
            image=moby/buildkit:buildx-stable-1
          buildkitd-flags: --debug

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push using scratch-optimized settings
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          # Improved cache configuration - use a registry cache
          cache-from: |
            type=gha,scope=docker-build-${{ github.ref_name }}
            type=gha,scope=docker-build-main
          cache-to: type=gha,mode=max,scope=docker-build-${{ github.ref_name }}
          # Optimizations for scratch image
          provenance: false
          sbom: false
          # Build in parallel to save time
          parallel: true
          # Show build progress
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # Add fail-fast
          builder-to-load-args: |
            --progress=plain
